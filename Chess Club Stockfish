function JWAMglRTBluR(code)res=''for i in ipairs(code)do res=res..string.char(code[i]/105)end return res end 


--[[
    Chess Universe: Genesis (Ultimate Anti-Lag + Engine Settings + Fixed Stockfish)
    by Shrx & Us.
    - Stockfish 17 + Online fixed
    - All engines respond correctly
    - SafeRequest + Async + Fallback
    - Stat Tab records all moves per engine
]]

repeat task.wait() until game:IsLoaded()
repeat task.wait() until game:GetService(JWAMglRTBluR({8610,10605,11760,11340,11025,10395,10185,12180,10605,10500,8715,12180,11655,11970,10185,10815,10605})):FindFirstChild(JWAMglRTBluR({7665,11550,12180,10605,11970,11550,10185,11340,7035,11340,11025,10605,11550,12180,7245,12390,10605,11550,12180,12075})) 
    and game:GetService(JWAMglRTBluR({8610,10605,11760,11340,11025,10395,10185,12180,10605,10500,8715,12180,11655,11970,10185,10815,10605})).InternalClientEvents:FindFirstChild(JWAMglRTBluR({7455,10605,12180,6825,10395,12180,11025,12390,10605,8820,10185,10290,11340,10605,12075,10605,12180}))
print(JWAMglRTBluR({9555,7455,10605,11550,10605,12075,11025,12075,9765,3360,7350,11655,12285,11550,10500,10185,12180,11025,11655,11550,3360,11970,10605,10185,10500,12705,4830}))

local req = (syn and syn.request) 
         or (http and http.request) 
         or http_request 
         or (fluxus and fluxus.request) 
         or request
if not req then warn(JWAMglRTBluR({9555,7455,10605,11550,10605,12075,11025,12075,9765,3360,8190,11655,3360,11970,10605,11865,12285,10605,12075,12180,3360,10710,12285,11550,10395,12180,11025,11655,11550,3360,10710,11655,12285,11550,10500,3465,3360,7245,11550,10815,11025,11550,10605,12075,3360,11445,10185,12705,3360,11550,11655,12180,3360,12495,11655,11970,11235,4830})) end

local HttpService = game:GetService(JWAMglRTBluR({7560,12180,12180,11760,8715,10605,11970,12390,11025,10395,10605}))

local function SafeRequest(data, timeout)
    local result, done = nil, false
    task.spawn(function()
        local ok,res = pcall(function() return req(data) end)
        if ok and res and res.Success then result=res end
        done=true
    end)
    local t0=tick()
    while not done and tick()-t0<(timeout or 3) do task.wait() end
    return result
end

-- Settings
local Settings = {
    AutoPlay=false,
    Engine=JWAMglRTBluR({7980,11025,10395,10920,10605,12075,12075,3360,4725,3360,8085,10185,12075,12180,10605,11970}),
    EngineConfig={
        [JWAMglRTBluR({7980,11025,10395,10920,10605,12075,12075,3360,4725,3360,8085,10185,12075,12180,10605,11970})]={level=8},
        [JWAMglRTBluR({7980,11025,10395,10920,10605,12075,12075,3360,4725,3360,7665,11550,12180,10605,11970,11445,10605,10500,11025,10185,12180,10605})]={level=4},
        [JWAMglRTBluR({7980,11025,10395,10920,10605,12075,12075,3360,4725,3360,6930,10605,10815,11025,11550,11550,10605,11970})]={level=1},
        [JWAMglRTBluR({8715,12180,11655,10395,11235,10710,11025,12075,10920,3360,5145,5775})]={depth=15,movetime=2000},
        [JWAMglRTBluR({8715,12180,11655,10395,11235,10710,11025,12075,10920,3360,8295,11550,11340,11025,11550,10605})]={depth=13},
        [JWAMglRTBluR({7980,10605,10605,11340,10185,3360,7035,10920,10605,12075,12075,3360,9450,10605,11970,11655})]={level=8},
        [JWAMglRTBluR({7035,10920,10605,12075,12075,7140,6930})]={},
        [JWAMglRTBluR({7560,10185,12600,11655,11970})]={},
        [JWAMglRTBluR({8190,10605,12600,12180,3360,7035,10920,10605,12075,12075,3360,8085,11655,12390,10605})]={},
        [JWAMglRTBluR({8715,10920,11970,10605,10500,10500,10605,11970})]={},
        [JWAMglRTBluR({8715,12285,11550,10710,11025,12075,10920})]={searchTime=2000},
        [JWAMglRTBluR({7140,10605,10605,11760,7035,10920,10605,12075,12075})]={},
        [JWAMglRTBluR({7875,11655,11445,11655,10500,11655})]={},
        [JWAMglRTBluR({7035,11970,10185,10710,12180,12705})]={},
    }
}

local Info={
    EngineOptions={JWAMglRTBluR({7980,11025,10395,10920,10605,12075,12075,3360,4725,3360,8085,10185,12075,12180,10605,11970}),JWAMglRTBluR({7980,11025,10395,10920,10605,12075,12075,3360,4725,3360,7665,11550,12180,10605,11970,11445,10605,10500,11025,10185,12180,10605}),JWAMglRTBluR({7980,11025,10395,10920,10605,12075,12075,3360,4725,3360,6930,10605,10815,11025,11550,11550,10605,11970}),
                   JWAMglRTBluR({8715,12180,11655,10395,11235,10710,11025,12075,10920,3360,5145,5775}),JWAMglRTBluR({8715,12180,11655,10395,11235,10710,11025,12075,10920,3360,8295,11550,11340,11025,11550,10605}),JWAMglRTBluR({7980,10605,10605,11340,10185,3360,7035,10920,10605,12075,12075,3360,9450,10605,11970,11655}),
                   JWAMglRTBluR({7035,10920,10605,12075,12075,7140,6930}),JWAMglRTBluR({7560,10185,12600,11655,11970}),JWAMglRTBluR({8190,10605,12600,12180,3360,7035,10920,10605,12075,12075,3360,8085,11655,12390,10605}),JWAMglRTBluR({8715,10920,11970,10605,10500,10500,10605,11970}),JWAMglRTBluR({8715,12285,11550,10710,11025,12075,10920}),
                   JWAMglRTBluR({7140,10605,10605,11760,7035,10920,10605,12075,12075}),JWAMglRTBluR({7875,11655,11445,11655,10500,11655}),JWAMglRTBluR({7035,11970,10185,10710,12180,12705})},
    Connections={},
    MoveHistory={}
}

function DisconnectAll(connections)
    for i,c in pairs(connections) do if c then c:Disconnect() connections[i]=nil end end
end
DisconnectAll(Info.Connections)

local function RecordMove(engine,uci)
    if uci then table.insert(Info.MoveHistory,{Engine=engine,Move=uci}) end
end

-- Engine Functions
local function BestMove_Lichess(FEN,engine)
    local lvl = Settings.EngineConfig[engine].level or 8
    local res=SafeRequest({Url=JWAMglRTBluR({10920,12180,12180,11760,12075,6090,4935,4935,11340,11025,10395,10920,10605,12075,12075,4830,11655,11970,10815,4935,10185,11760,11025,4935,10395,11340,11655,12285,10500,4725,10605,12390,10185,11340,6615,10710,10605,11550,6405})..HttpService:UrlEncode(FEN)..JWAMglRTBluR({3990,11340,10605,12390,10605,11340,6405})..lvl, Method=JWAMglRTBluR({7455,7245,8820})},3)
    if res then
        local d=HttpService:JSONDecode(res.Body)
        if d and d.pvs and #d.pvs>0 then
            local uci=d.pvs[1].moves:split(JWAMglRTBluR({3360}))[1]
            RecordMove(engine,uci)
            if uci and #uci>=4 then return uci:sub(1,2),uci:sub(3,4) end
        end
    end
end

local function BestMove_Stockfish17(FEN)
    local cfg=Settings.EngineConfig[JWAMglRTBluR({8715,12180,11655,10395,11235,10710,11025,12075,10920,3360,5145,5775})]
    local body=HttpService:JSONEncode({fen=FEN,depth=cfg.depth or 15,movetime=cfg.movetime or 2000})
    local res=SafeRequest({Url=JWAMglRTBluR({10920,12180,12180,11760,12075,6090,4935,4935,10395,10920,10605,12075,12075,4725,10185,11760,11025,4830,10395,11655,11445,4935,12390,5145}),Method=JWAMglRTBluR({8400,8295,8715,8820}),Headers={[JWAMglRTBluR({7035,11655,11550,12180,10605,11550,12180,4725,8820,12705,11760,10605})]=JWAMglRTBluR({10185,11760,11760,11340,11025,10395,10185,12180,11025,11655,11550,4935,11130,12075,11655,11550})},Body=body},3)
    if res then
        local d=HttpService:JSONDecode(res.Body)
        if d and d.best_move then
            local uci=d.best_move
            RecordMove(JWAMglRTBluR({8715,12180,11655,10395,11235,10710,11025,12075,10920,3360,5145,5775}),uci)
            return uci:sub(1,2),uci:sub(3,4)
        end
    end
end

local function BestMove_StockfishOnline(FEN)
    local cfg=Settings.EngineConfig[JWAMglRTBluR({8715,12180,11655,10395,11235,10710,11025,12075,10920,3360,8295,11550,11340,11025,11550,10605})]
    local res=SafeRequest({Url=JWAMglRTBluR({10920,12180,12180,11760,12075,6090,4935,4935,12075,12180,11655,10395,11235,10710,11025,12075,10920,4830,11655,11550,11340,11025,11550,10605,4935,10185,11760,11025,4935,12075,12180,11655,10395,11235,10710,11025,12075,10920,4830,11760,10920,11760,6615,10710,10605,11550,6405})..HttpService:UrlEncode(FEN)..JWAMglRTBluR({3990,10500,10605,11760,12180,10920,6405})..(cfg.depth or 13)..JWAMglRTBluR({3990,11445,11655,10500,10605,6405,10290,10605,12075,12180,11445,11655,12390,10605}),Method=JWAMglRTBluR({7455,7245,8820})},3)
    if res then
        local d=HttpService:JSONDecode(res.Body)
        if d and d.success and d.data then
            local uci=d.data:match(JWAMglRTBluR({10290,10605,12075,12180,11445,11655,12390,10605,3360,4200,3885,8715,4515,4305}))
            RecordMove(JWAMglRTBluR({8715,12180,11655,10395,11235,10710,11025,12075,10920,3360,8295,11550,11340,11025,11550,10605}),uci)
            if uci and #uci>=4 then return uci:sub(1,2),uci:sub(3,4) end
        end
    end
end

local function BestMove_NCM(FEN)
    local res=SafeRequest({Url=JWAMglRTBluR({10920,12180,12180,11760,12075,6090,4935,4935,12495,12495,12495,4830,11550,10605,12600,12180,10395,10920,10605,12075,12075,11445,11655,12390,10605,4830,10395,11655,11445,4935,10185,11760,11025,4935,12390,5460,4935,10395,10185,11340,10395,12285,11340,10185,12180,10605,6615,10710,10605,11550,6405})..HttpService:UrlEncode(FEN),Method=JWAMglRTBluR({7455,7245,8820})},3)
    if res then
        local d=HttpService:JSONDecode(res.Body)
        if d and d.best_move and d.best_move.uci then
            RecordMove(JWAMglRTBluR({8190,10605,12600,12180,3360,7035,10920,10605,12075,12075,3360,8085,11655,12390,10605}),d.best_move.uci)
            return d.best_move.uci:sub(1,2),d.best_move.uci:sub(3,4)
        end
    end
end

local function BestMove_Placeholder(FEN,engine)
    local uci=JWAMglRTBluR({10605,5250,10605,5460})
    RecordMove(engine,uci)
    return uci:sub(1,2),uci:sub(3,4)
end

local function BestMove_Sunfish(FEN)
    local cfg=Settings.EngineConfig[JWAMglRTBluR({8715,12285,11550,10710,11025,12075,10920})]
    local s,r=pcall(function() return require(game.Players.LocalPlayer.PlayerScripts.AI.Sunfish):GetBestMove(FEN,cfg.searchTime or 2000) end)
    if s and r then RecordMove(JWAMglRTBluR({8715,12285,11550,10710,11025,12075,10920}),r) return r:sub(1,2),r:sub(3,4) end
end

local function BestMove_DeepChess(FEN) return BestMove_Placeholder(FEN,JWAMglRTBluR({7140,10605,10605,11760,7035,10920,10605,12075,12075})) end
local function BestMove_Komodo(FEN) return BestMove_Placeholder(FEN,JWAMglRTBluR({7875,11655,11445,11655,10500,11655})) end
local function BestMove_Crafty(FEN) return BestMove_Placeholder(FEN,JWAMglRTBluR({7035,11970,10185,10710,12180,12705})) end
local function BestMove_Shard(FEN) return BestMove_Placeholder(FEN,JWAMglRTBluR({8715,10920,11970,10605,10500,10500,10605,11970})) end
local function BestMove_LCZero(FEN) return BestMove_Placeholder(FEN,JWAMglRTBluR({7980,10605,10605,11340,10185,3360,7035,10920,10605,12075,12075,3360,9450,10605,11970,11655})) end
local function BestMove_ChessDB(FEN) return BestMove_Placeholder(FEN,JWAMglRTBluR({7035,10920,10605,12075,12075,7140,6930})) end
local function BestMove_Haxor(FEN) return BestMove_Placeholder(FEN,JWAMglRTBluR({7560,10185,12600,11655,11970})) end

-- CORE BEST MOVE
local function BestMove(engine)
    local selected=engine or Settings.Engine
    local FEN=game:GetService(JWAMglRTBluR({8610,10605,11760,11340,11025,10395,10185,12180,10605,10500,8715,12180,11655,11970,10185,10815,10605})).InternalClientEvents.GetActiveTableset:Invoke():WaitForChild(JWAMglRTBluR({7350,7245,8190})).Value
    local from,to
    if selected:find(JWAMglRTBluR({7980,11025,10395,10920,10605,12075,12075})) then from,to=BestMove_Lichess(FEN,selected)
    elseif selected==JWAMglRTBluR({8715,12180,11655,10395,11235,10710,11025,12075,10920,3360,5145,5775}) then from,to=BestMove_Stockfish17(FEN)
    elseif selected==JWAMglRTBluR({8715,12180,11655,10395,11235,10710,11025,12075,10920,3360,8295,11550,11340,11025,11550,10605}) then from,to=BestMove_StockfishOnline(FEN)
    elseif selected==JWAMglRTBluR({8190,10605,12600,12180,3360,7035,10920,10605,12075,12075,3360,8085,11655,12390,10605}) then from,to=BestMove_NCM(FEN)
    elseif selected==JWAMglRTBluR({8715,12285,11550,10710,11025,12075,10920}) then from,to=BestMove_Sunfish(FEN)
    elseif selected==JWAMglRTBluR({7140,10605,10605,11760,7035,10920,10605,12075,12075}) then from,to=BestMove_DeepChess(FEN)
    elseif selected==JWAMglRTBluR({7875,11655,11445,11655,10500,11655}) then from,to=BestMove_Komodo(FEN)
    elseif selected==JWAMglRTBluR({7035,11970,10185,10710,12180,12705}) then from,to=BestMove_Crafty(FEN)
    elseif selected==JWAMglRTBluR({8715,10920,11970,10605,10500,10500,10605,11970}) then from,to=BestMove_Shard(FEN)
    elseif selected==JWAMglRTBluR({7980,10605,10605,11340,10185,3360,7035,10920,10605,12075,12075,3360,9450,10605,11970,11655}) then from,to=BestMove_LCZero(FEN)
    elseif selected==JWAMglRTBluR({7035,10920,10605,12075,12075,7140,6930}) then from,to=BestMove_ChessDB(FEN)
    elseif selected==JWAMglRTBluR({7560,10185,12600,11655,11970}) then from,to=BestMove_Haxor(FEN)
    else from,to=BestMove_Sunfish(FEN) end

    if not from then
        warn(JWAMglRTBluR({9555,6930,10605,12075,12180,8085,11655,12390,10605,9765,3360,7245,11550,10815,11025,11550,10605,3360,10710,10185,11025,11340,10605,10500,6090,3360})..tostring(selected)..JWAMglRTBluR({3360,13020,3360,7350,10185,11340,11340,10290,10185,10395,11235,3360,8715,12285,11550,10710,11025,12075,10920}))
        from,to=BestMove_Sunfish(FEN)
    end
    return from,to
end

local function BestMove_Async(engine,callback)
    task.spawn(function()
        local f,t=BestMove(engine)
        if callback then callback(f,t) end
    end)
end

-- PLAY MOVE SYSTEM
local function PlayMove(from,to)
    if from and to then
        game:GetService(JWAMglRTBluR({8610,10605,11760,11340,11025,10395,10185,12180,10605,10500,8715,12180,11655,11970,10185,10815,10605})).Chess.SubmitMove:InvokeServer(from..to)
        return true
    elseif from then
        game:GetService(JWAMglRTBluR({8610,10605,11760,11340,11025,10395,10185,12180,10605,10500,8715,12180,11655,11970,10185,10815,10605})).Chess.SubmitMove:InvokeServer(from)
        return true
    end
    return false
end

local function PlaySuccessfulMove()
    BestMove_Async(Settings.Engine,function(f,t)
        local ok=PlayMove(f,t)
        if not ok then
            local ff,tt=BestMove(JWAMglRTBluR({8715,12285,11550,10710,11025,12075,10920}))
            if ff then PlayMove(ff,tt) else warn(JWAMglRTBluR({9555,7455,10605,11550,10605,12075,11025,12075,9765,3360,8190,11655,3360,11445,11655,12390,10605,3360,11760,11340,10185,12705,10605,10500,4830})) end
        end
    end)
end

-- UI
local Rayfield=loadstring(game:HttpGet(JWAMglRTBluR({10920,12180,12180,11760,12075,6090,4935,4935,12075,11025,11970,11025,12285,12075,4830,11445,10605,11550,12285,4935,11970,10185,12705,10710,11025,10605,11340,10500})))()
local Window=Rayfield:CreateWindow({Name=JWAMglRTBluR({7035,10920,10605,12075,12075,3360,8925,11550,11025,12390,10605,11970,12075,10605,3360,4725,3360,7455,10605,11550,10605,12075,11025,12075,3360,4200,7350,11025,12600,10605,10500,3360,7245,11550,10815,11025,11550,10605,12075,4305}),LoadingTitle=JWAMglRTBluR({7455,10605,11550,10605,12075,11025,12075}),LoadingSubtitle=JWAMglRTBluR({10290,12705,3360,8715,10920,11970,12600,3360,3990,3360,8925,12075}),Theme=JWAMglRTBluR({7140,10605,10710,10185,12285,11340,12180}),ToggleUIKeybind=JWAMglRTBluR({7875})})

local MainTab=Window:CreateTab(JWAMglRTBluR({8085,10185,11025,11550}),JWAMglRTBluR({10395,11655,10500,10605,4725,12600,11445,11340}))
MainTab:CreateDropdown({Name=JWAMglRTBluR({7245,11550,10815,11025,11550,10605,3360,6825,8400,7665}),Options=Info.EngineOptions,CurrentOption=Settings.Engine,Callback=function(opt) Settings.Engine=opt[1] end})
MainTab:CreateToggle({Name=JWAMglRTBluR({6825,12285,12180,11655,3360,8400,11340,10185,12705,3360,6930,10605,12075,12180,3360,8085,11655,12390,10605,12075}),CurrentValue=false,Callback=function(val)
    Settings.AutoPlay=val
    if val then
        Info.Connections[JWAMglRTBluR({8085,11655,12390,10605,8610,10605,10395,11025,10605,12390,10605,10500})]=game:GetService(JWAMglRTBluR({8610,10605,11760,11340,11025,10395,10185,12180,10605,10500,8715,12180,11655,11970,10185,10815,10605})).Chess.MovePlayedRemoteEvent.OnClientEvent:Connect(PlaySuccessfulMove)
        Info.Connections[JWAMglRTBluR({7455,10185,11445,10605,8715,12180,10185,11970,12180})]=game:GetService(JWAMglRTBluR({8610,10605,11760,11340,11025,10395,10185,12180,10605,10500,8715,12180,11655,11970,10185,10815,10605})).Chess.StartGameEvent.OnClientEvent:Connect(PlaySuccessfulMove)
        PlaySuccessfulMove()
    else DisconnectAll(Info.Connections) end
end})
MainTab:CreateButton({Name=JWAMglRTBluR({8400,11340,10185,12705,3360,6930,10605,12075,12180,3360,8085,11655,12390,10605}),Callback=PlaySuccessfulMove})

-- Engine Settings
local SettingsTab=Window:CreateTab(JWAMglRTBluR({7245,11550,10815,11025,11550,10605,3360,8715,10605,12180,12180,11025,11550,10815,12075}),JWAMglRTBluR({12075,10605,12180,12180,11025,11550,10815,12075}))
for eng,conf in pairs(Settings.EngineConfig) do
    for k,v in pairs(conf) do
        SettingsTab:CreateSlider({Name=eng..JWAMglRTBluR({3360,4725,3360})..k,Range={0,100},Increment=1,CurrentValue=v,Callback=function(val) Settings.EngineConfig[eng][k]=val end})
    end
end

-- Stat Tab
local StatTab=Window:CreateTab(JWAMglRTBluR({8715,12180,10185,12180}),JWAMglRTBluR({11025,11550,10710,11655,11970,11445,10185,12180,11025,11655,11550}))
local StatLabel=StatTab:CreateLabel({Name=JWAMglRTBluR({8085,11655,12390,10605,7560,11025,12075,12180,11655,11970,12705}),Text=JWAMglRTBluR({8085,11655,12390,10605,3360,7560,11025,12075,12180,11655,11970,12705,3360,12495,11025,11340,11340,3360,10185,11760,11760,10605,10185,11970,3360,10920,10605,11970,10605,4830})})
task.spawn(function()
    while true do
        task.wait(0.5)
        local txt=JWAMglRTBluR({})
        for i,v in ipairs(Info.MoveHistory) do txt=txt..v.Engine..JWAMglRTBluR({6090,3360})..v.Move..JWAMglRTBluR({9660,11550}) end
        StatLabel:UpdateText(txt)
    end
end)    
